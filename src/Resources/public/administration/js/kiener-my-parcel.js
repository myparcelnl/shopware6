(this.webpackJsonp=this.webpackJsonp||[]).push([["kiener-my-parcel"],{OeKE:function(e){e.exports=JSON.parse('{"sw-myparcel":{"general":{"mainMenuItemGeneral":"MyParcel","ordersMenuItemGeneral":"Orders","consignmentsMenuItemGeneral":"Shipments","shippingMethodsMenuItemGeneral":"Shipping methods","descriptionTextModule":"Tagline for MyParcel","packageTypes":{"package":"Package","mailbox":"Mailbox","letter":"Letter","digitalStamp":"Digital stamp"},"deliveryTypes":{"morning":"Morning delivery","standard":"Standard delivery","evening":"Evening delivery","pickup":"Pickup point"},"carriers":{"postNL":"PostNL","bPost":"bpost","dpd":"DPD"}},"messages":{"error":"An error has occurred","consignmentSuccess":"The Shipment is successfully created","createLabelSuccess":"The label is successfully created"},"columns":{"idColumn":"ID","orderColumn":"Order","orderDateColumn":"Ordered","consignmentDateColumn":"Created","totalAmountColumn":"Total amount","trackingCodesColumn":"Track & trace","statusColumn":"Status","actionsColumn":"Actions","packageTypeColumn":"Package type","deliveryDateColumn":"Delivery date","carrierColumn":"Carrier","deliveryTypeColumn":"Delivery type","requiresAgeCheckColumn":"Requires age check","requiresSignatureColumn":"Requires signature","onlyRecipientColumn":"Recipient only","returnIfNotHomeColumn":"Return if not home","largeFormatColumn":"Large format","numberOfConsignmentsColumn":"Shipment(s)"},"orders":{"title":"Orders","modals":{"createConsignment":{"titleSingle":"Create a shipment","titleMultiple":"Create shipments ({numberOfItems} item(s))","actionTypeDownloadLabel":"Download","actionTypeCreateLabel":"Create label","actionTypeCreateConsignment":"Create shipment","packageTypePackageLabel":"Package","packageTypeMailboxLabel":"Mailbox","packageTypeLetterLabel":"Letter","packageTypeDigitalStampLabel":"Digital stamp","optionOnlyRecipientLabel":"Only recipient","optionRequiresAgeCheckLabel":"Requires age check 18+","optionRequiresSignatureLabel":"Requires signature","optionReturnIfNotHomeLabel":"Return if not home","optionLargeFormatLabel":"Large format","positionTopLeftLabel":"Top left","positionTopRightLabel":"Top right","positionBottomLeftLabel":"Bottom left","positionBottomRightLabel":"Bottom right","printSmallLabelLabel":"A6 label","actionTypeHeading":"Action type","deliveryTypeHeading":"Delivery type","packageTypeHeading":"Package type","numberOfLabelsHeading":"Number of labels","printOptionsHeading":"Print options","printPositionHeading":"Print position","shippingOptionsHeading":"Shipping options"}},"buttons":{"viewOrderButton":"View the order","cancelButton":"Cancel","createConsignmentButton":"Create shipment","createConsignmentsButton":"Create shipments","downloadLabelButton":"Download label"}},"consignments":{"title":"Shipments","modals":{"createLabels":{"titleSingle":"Create label","titleMultiple":"Create labels ({numberOfItems} item(s))","positionTopLeftLabel":"Top left","positionTopRightLabel":"Top right","positionBottomLeftLabel":"Bottom left","positionBottomRightLabel":"Bottom right","printSmallLabelLabel":"A6 label","numberOfLabelsHeading":"Number of labels","printOptionsHeading":"Print options","printPositionHeading":"Print position"}},"buttons":{"cancelButton":"Cancel","clearFiltersButton":"Show all","createLabelButton":"Create label","createLabelsButton":"Create labels","downloadLabelButton":"Download label","downloadLabelsButton":"Download labels","downloadDefaultLabelButton":"Download label (default settings)","downloadDefaultLabelsButton":"Download labels (default settings)"}},"shippingMethods":{"title":"Shipping methods","buttons":{"viewShippingMethodButton":"View shipping method"}}}}')},YY62:function(e,t,n){"use strict";n.r(t);const i=Shopware.Classes.ApiService;var a=class extends i{constructor(e,t,n="myparcel"){super(e,t,n)}all(){const e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/shipping-options/all`,{headers:e}).then(e=>i.handleResponse(e))}};const l=Shopware.Classes.ApiService;var s=class extends l{constructor(e,t,n="myparcel"){super(e,t,n)}createShipment(e={consignment_id:null,shipping_option_id:null,order_id:null,order_version_id:null,label_url:null,insured_amount:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/shipment/create`,JSON.stringify(e),{headers:t}).then(e=>l.handleResponse(e))}};const o=Shopware.Classes.ApiService;var r=class extends o{constructor(e,t,n="myparcel"){super(e,t,n)}createConsignments(e={orders:null,label_positions:null,number_of_labels:null,package_type:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/consignment/create-consignments`,JSON.stringify(e),{headers:t}).then(e=>o.handleResponse(e))}createLabels(e={reference_ids:null,label_positions:null,number_of_labels:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/consignment/download-labels`,JSON.stringify(e),{headers:t}).then(e=>o.handleResponse(e))}getForShippingOption(e={shipping_option_id:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/consignment/get-for-shipping-option`,JSON.stringify(e),{headers:t}).then(e=>o.handleResponse(e))}};const{Application:p}=Shopware;p.addServiceProvider("MyParcelShippingOptionsService",e=>{const t=p.getContainer("init");return new a(t.httpClient,e.loginService)}),p.addServiceProvider("MyParcelShipmentService",e=>{const t=p.getContainer("init");return new s(t.httpClient,e.loginService)}),p.addServiceProvider("MyParcelConsignmentService",e=>{const t=p.getContainer("init");return new r(t.httpClient,e.loginService)});var m=n("oPqW"),c=n.n(m);const{Component:d,Mixin:g}=Shopware,{Criteria:u}=Shopware.Data;d.register("sw-myparcel-orders",{template:c.a,mixins:[g.getByName("listing"),g.getByName("notification")],inject:["repositoryFactory","stateStyleDataProviderService","MyParcelConsignmentService","systemConfigApiService"],data(){return{isLoading:!1,filterLoading:!1,availableAffiliateCodes:[],affiliateCodeFilter:[],availableCampaignCodes:[],campaignCodeFilter:[],shippingOptions:[],shippingOptions2:[],sortBy:"order.orderNumber",sortDirection:"DESC",createSingleConsignmentLoading:!1,createMultipleConsignmentsLoading:!1,selectionCount:0,selectedShippingOptions:null,selectedShippingOptionIds:[],createSingleConsignment:{item:null,actionType:"download",printSmallLabel:!1,printPosition:[1,2,3,4],numberOfLabels:1,showModal:!1},createMultipleConsignments:{items:[],actionType:"download",packageType:1,printSmallLabel:!1,printPosition:[1,2,3,4],showModal:!1},carriers:{1:this.$tc("sw-myparcel.general.carriers.postNL"),2:this.$tc("sw-myparcel.general.carriers.bpost"),3:this.$tc("sw-myparcel.general.carriers.dpd")},deliveryTypes:{1:this.$tc("sw-myparcel.general.deliveryTypes.morning"),2:this.$tc("sw-myparcel.general.deliveryTypes.standard"),3:this.$tc("sw-myparcel.general.deliveryTypes.evening"),4:this.$tc("sw-myparcel.general.deliveryTypes.pickup")},page:1,total:0,limit:25}},created(){this.setDefaultLabelSize()},metaInfo(){return{title:this.$createTitle()}},mounted(){const e=new u(this.page,this.limit);e.addAggregation(u.count("countTotal","id")),this.shippingOptionRepository.search(e,Shopware.Context.api).then(e=>{this.total=e.aggregations.countTotal.count})},computed:{orderColumns(){return this.getOrderColumns()},createMultipleConsignmentsAvailable(){return!!this.selectedShippingOptionIds&&this.selectionCount>0||!1},shippingOptionRepository(){return this.repositoryFactory.create("kiener_my_parcel_shipping_option")},shippingOptionCriteria(){const e=new u(this.page,this.limit);return e.setTerm(this.term),this.affiliateCodeFilter.length>0&&e.addFilter(u.equalsAny("affiliateCode",this.affiliateCodeFilter)),this.campaignCodeFilter.length>0&&e.addFilter(u.equalsAny("campaignCode",this.campaignCodeFilter)),e.addSorting(u.sort(this.sortBy,this.sortDirection)),e.addAssociation("order"),e.addAssociation("order.addresses"),e.addAssociation("order.salesChannel"),e.addAssociation("order.orderCustomer"),e.addAssociation("order.currency"),e.addAssociation("order.transactions"),e.addAssociation("order.deliveries"),e}},methods:{getOrderColumns:()=>[{property:"order.orderNumber",label:"sw-order.list.columnOrderNumber",allowResize:!0,primary:!0},{property:"order.salesChannel.name",label:"sw-order.list.columnSalesChannel",allowResize:!0},{property:"order.orderCustomer.firstName",dataIndex:"order.orderCustomer.firstName,order.orderCustomer.lastName",label:"sw-order.list.columnCustomerName",allowResize:!0},{property:"order.billingAddressId",label:"sw-order.list.columnBillingAddress",allowResize:!0},{property:"order.amountTotal",label:"sw-order.list.columnAmount",align:"right",allowResize:!0},{property:"order.stateMachineState.name",label:"sw-order.list.columnState",allowResize:!0},{property:"order.transactions[0].stateMachineState.name",label:"sw-order.list.columnTransactionState",allowResize:!0},{property:"order.deliveries[0].stateMachineState.name",label:"sw-order.list.columnDeliveryState",allowResize:!0},{property:"deliveryDate",label:"sw-myparcel.columns.deliveryDateColumn",allowResize:!0},{property:"carrierId",label:"sw-myparcel.columns.carrierColumn",allowResize:!0},{property:"deliveryType",label:"sw-myparcel.columns.deliveryTypeColumn",allowResize:!0},{property:"numberOfConsignments",label:"sw-myparcel.columns.numberOfConsignmentsColumn",allowResize:!0},{property:"order.orderDateTime",label:"sw-order.list.orderDate",allowResize:!0},{property:"order.affiliateCode",inlineEdit:"string",label:"sw-order.list.columnAffiliateCode",allowResize:!0,visible:!1},{property:"order.campaignCode",inlineEdit:"string",label:"sw-order.list.columnCampaignCode",allowResize:!0,visible:!1}],setDefaultLabelSize(){this.systemConfigApiService.getValues("KienerMyParcel.config").then(e=>{"A6"==e["KienerMyParcel.config.myParcelDefaultLabelFormat"]&&(this.createSingleConsignment.printSmallLabel=!0,this.createMultipleConsignments.printSmallLabel=!0)})},getNumberOfConsignments(e){const t=this.$refs[e];t&&(t.innerHTML="0",this.MyParcelConsignmentService.getForShippingOption({shipping_option_id:e}).then(e=>{if(!0===e.success){let n=0;if(e.consignments)for(let t in e.consignments)n+=1;t.innerHTML=n.toString()}}))},getBillingAddress:e=>e.addresses.find(t=>t.id===e.billingAddressId),getVariantFromOrderState(e){return this.stateStyleDataProviderService.getStyle("order.state",e.stateMachineState.technicalName).variant},getVariantFromPaymentState(e){return this.stateStyleDataProviderService.getStyle("order_transaction.state",e.transactions[0].stateMachineState.technicalName).variant},getVariantFromDeliveryState(e){return this.stateStyleDataProviderService.getStyle("order_delivery.state",e.deliveries[0].stateMachineState.technicalName).variant},closeModals(){this.closeCreateSingleConsignmentModal(),this.closeCreateMultipleConsignmentsModal()},closeCreateSingleConsignmentModal(){this.createSingleConsignment.showModal=!1,this.createSingleConsignmentLoading=!1},closeCreateMultipleConsignmentsModal(){this.createMultipleConsignments.showModal=!1,this.createMultipleConsignmentsLoading=!1},openCreateSingleConsignmentModal(){this.createSingleConsignment.showModal=!0},openCreateMultipleConsignmentsModal(){this.createMultipleConsignments.showModal=!0},saveSingleConsignment(e){this.createSingleConsignmentLoading=!0;let t={order_id:e.item.order.id,order_version_id:e.item.order.versionId,shipping_option_id:e.item.id,package_type:e.item.packageType};e.packageType=e.item.packageType,this.createConsignments([t],e)},saveMultipleConsignments(e){this.createMultipleConsignmentsLoading=!0;let t=[];for(let n in e.items){let i=null;e.items[n]&&(i=e.items[n]),i&&t.push({order_id:i.orderId,order_version_id:i.orderVersionId,shipping_option_id:n,package_type:e.packageType})}t.length&&this.createConsignments(t,e)},createConsignments(e,t){this.MyParcelConsignmentService.createConsignments({orders:e,label_positions:!1===t.printSmallLabel?t.printPosition:[],number_of_labels:!1===t.numberOfLabels?1:t.numberOfLabels,package_type:t.packageType}).then(e=>{!0===e.success?(this.createNotificationSuccess({title:this.$tc("sw-myparcel.general.mainMenuItemGeneral"),message:this.$tc("sw-myparcel.messages.consignmentSuccess")}),e.labelUrl&&"download"===t.actionType&&(document.location=e.labelUrl)):this.createNotificationError({title:this.$tc("sw-myparcel.general.mainMenuItemGeneral"),message:this.$tc("sw-myparcel.messages.error")}),this.closeModals()}).catch(()=>{this.createNotificationError({title:this.$tc("sw-myparcel.general.mainMenuItemGeneral"),message:this.$tc("sw-myparcel.messages.error")}),this.closeModals()})},getList(){return this.isLoading=!0,this.shippingOptionRepository.search(this.shippingOptionCriteria,Shopware.Context.api).then(e=>(this.shippingOptions=[],e.forEach(e=>{e.order.deliveries&&0!==e.order.deliveries.length&&e.order.deliveries[0].stateMachineState.name&&"open"===e.order.deliveries[0].stateMachineState.name.toLowerCase()&&this.shippingOptions.push(e),e.order.deliveries&&0!==e.order.deliveries.length&&e.order.deliveries[0].stateMachineState.name||this.shippingOptions.push(e)}),this.isLoading=!1,this.shippingOptions&&this.shippingOptions.forEach(e=>this.getNumberOfConsignments(e.id)),e)).catch(e=>{this.isLoading=!1})},onlyRecipientChecked(e){return!0===this.onlyRecipientDisabled(e)||e.onlyRecipient},onlyRecipientDisabled:e=>1===e.deliveryType||3===e.deliveryType,onSelectionChanged(e,t){if(this.selectionCount=t,this.selectedShippingOptions=e,this.selectedShippingOptionIds=[],this.selectedShippingOptions)for(let e in this.selectedShippingOptions)this.selectedShippingOptionIds.push(e)},onSortColumn(e){let t=this.sortDirection;t="ASC"===t?"DESC":"ASC",this.sortBy!==e.dataIndex&&(t="ASC"),this.sortBy=e.dataIndex,this.sortDirection=t,this.getList()},onOpenCreateSingleConsignmentModal(e){this.createSingleConsignment.item=e,this.selectedShippingOptionIds=[e.id],this.createSingleConsignment.numberOfLabels=1,this.createSingleConsignment.showModal=!0},onCloseCreateSingleConsignmentModal(){this.closeCreateSingleConsignmentModal()},onCreateSingleConsignment(){this.createSingleConsignment.item&&this.shippingOptionRepository.save(this.createSingleConsignment.item,Shopware.Context.api).then(()=>{this.saveSingleConsignment(this.createSingleConsignment)}).catch(()=>{})},onOpenCreateMultipleConsignmentsModal(){this.selectedShippingOptionIds&&this.selectedShippingOptionIds.length&&(this.createMultipleConsignments.items=this.selectedShippingOptions,this.openCreateMultipleConsignmentsModal())},onCloseCreateMultipleConsignmentsModal(){this.closeCreateMultipleConsignmentsModal()},onCreateMultipleConsignments(){this.saveMultipleConsignments(this.createMultipleConsignments)},onPageChange({page:e=1,limit:t=25}){this.page=e,this.limit=t,this.isLoading=!0,this.getList()}}});var h=n("daBO"),b=n.n(h);const{Component:y,Mixin:C}=Shopware,{Criteria:w}=Shopware.Data;y.register("sw-myparcel-consignments",{template:b.a,mixins:[C.getByName("listing"),C.getByName("notification")],inject:["repositoryFactory","MyParcelConsignmentService","systemConfigApiService"],data(){return{isLoading:!1,consignments:[],sortBy:"createdAt",sortDirection:"DESC",createSingleLabel:{item:null,printSmallLabel:!1,printPosition:[1,2,3,4],numberOfLabels:1,showModal:!1},createMultipleLabels:{items:null,printSmallLabel:!1,printPosition:[1,2,3,4],numberOfLabels:1,showModal:!1},createSingleLabelLoading:!1,createMultipleLabelsLoading:!1,selectionCount:0,selectedConsignments:null,selectedConsignmentIds:[],orderIdFilter:[],packageTypes:{1:this.$tc("sw-myparcel.general.packageTypes.package"),2:this.$tc("sw-myparcel.general.packageTypes.mailbox"),3:this.$tc("sw-myparcel.general.packageTypes.letter")},deliveryTypes:{1:this.$tc("sw-myparcel.general.deliveryTypes.morning"),2:this.$tc("sw-myparcel.general.deliveryTypes.standard"),3:this.$tc("sw-myparcel.general.deliveryTypes.evening"),4:this.$tc("sw-myparcel.general.deliveryTypes.pickup")},carriers:{1:this.$tc("sw-myparcel.general.carriers.postNL"),2:this.$tc("sw-myparcel.general.carriers.bpost"),3:this.$tc("sw-myparcel.general.carriers.dpd")},page:1,total:0,limit:25}},created(){this.setDefaultLabelSize()},metaInfo(){return{title:this.$createTitle()}},mounted(){this.$route.params.orderId&&this.orderIdFilter.push(this.$route.params.orderId);const e=new w(this.page,this.limit);e.addAggregation(w.count("countTotal","id")),this.consignmentRepository.search(e,Shopware.Context.api).then(e=>{this.total=e.aggregations.countTotal.count}),this.getList()},computed:{consignmentColumns(){return this.getConsignmentColumns()},createMultipleLabelsAvailable(){return!!this.selectedConsignmentIds&&this.selectionCount>0||!1},downloadMultipleLabelsAvailable(){return!!this.selectedConsignmentIds&&this.selectionCount>0||!1},consignmentRepository(){return this.repositoryFactory.create("kiener_my_parcel_shipment")},consignmentCriteria(){const e=new w(this.page,this.limit);return this.orderIdFilter.length&&this.orderIdFilter.forEach(t=>{e.addFilter(w.equals("orderId",t))}),e.setTerm(this.term),e.addSorting(w.sort(this.sortBy,this.sortDirection)),e.addAssociation("order"),e.addAssociation("order.deliveries"),e.addAssociation("shippingOption"),e}},methods:{getConsignmentColumns:()=>[{property:"createdAt",label:"sw-myparcel.columns.consignmentDateColumn",allowResize:!0,primary:!0},{property:"order.orderNumber",label:"sw-myparcel.columns.orderColumn",allowResize:!0},{property:"barCode",label:"sw-myparcel.columns.trackingCodesColumn",allowResize:!0},{property:"order.orderDateTime",label:"sw-myparcel.columns.orderDateColumn",allowResize:!0},{property:"shippingOption.packageType",label:"sw-myparcel.columns.packageTypeColumn",allowResize:!0},{property:"shippingOption.deliveryDate",label:"sw-myparcel.columns.deliveryDateColumn",allowResize:!0},{property:"shippingOption.carrierId",label:"sw-myparcel.columns.carrierColumn",allowResize:!0},{property:"shippingOption.deliveryType",label:"sw-myparcel.columns.deliveryTypeColumn",allowResize:!0},{property:"shippingOption.requiresAgeCheck",label:"sw-myparcel.columns.requiresAgeCheckColumn",align:"center",allowResize:!0},{property:"shippingOption.requiresSignature",label:"sw-myparcel.columns.requiresSignatureColumn",align:"center",allowResize:!0},{property:"shippingOption.onlyRecipient",label:"sw-myparcel.columns.onlyRecipientColumn",align:"center",allowResize:!0},{property:"shippingOption.returnIfNotHome",label:"sw-myparcel.columns.returnIfNotHomeColumn",align:"center",allowResize:!0},{property:"shippingOption.largeFormat",label:"sw-myparcel.columns.largeFormatColumn",align:"center",allowResize:!0}],setDefaultLabelSize(){this.systemConfigApiService.getValues("KienerMyParcel.config").then(e=>{"A6"==e["KienerMyParcel.config.myParcelDefaultLabelFormat"]&&(this.createSingleLabel.printSmallLabel=!0,this.createMultipleLabels.printSmallLabel=!0)})},closeModals(){this.closeCreateSingleLabelModal(),this.closeCreateMultipleLabelsModal()},closeCreateSingleLabelModal(){this.createSingleLabel.showModal=!1,this.createSingleLabelLoading=!1},closeCreateMultipleLabelsModal(){this.createMultipleLabels.showModal=!1,this.createMultipleLabelsLoading=!1},openCreateSingleLabelModal(){this.createSingleLabel.showModal=!0},openCreateMultipleLabelsModal(){this.createMultipleLabels.showModal=!0},createLabels(e){this.MyParcelConsignmentService.createLabels(e).then(e=>{e.success?(this.createNotificationSuccess({title:this.$tc("sw-myparcel.general.mainMenuItemGeneral"),message:this.$tc("sw-myparcel.messages.createLabelSuccess")}),e.labelUrl&&(document.location=e.labelUrl)):this.createNotificationSuccess({title:this.$tc("sw-myparcel.general.mainMenuItemGeneral"),message:this.$tc("sw-myparcel.messages.error")}),this.closeModals()}).catch(()=>{this.createNotificationSuccess({title:this.$tc("sw-myparcel.general.mainMenuItemGeneral"),message:this.$tc("sw-myparcel.messages.error")}),this.closeModals()})},getList(){return this.isLoading=!0,this.consignmentRepository.search(this.consignmentCriteria,Shopware.Context.api).then(e=>(this.consignments=e,this.isLoading=!1,e)).catch(()=>{this.isLoading=!1})},onSelectionChanged(e,t){if(this.selectionCount=t,this.selectedConsignments=e,this.selectedConsignmentIds=[],this.selectedConsignments)for(let e in this.selectedConsignments)this.selectedConsignmentIds.push(e)},onSortColumn(e){let t=this.sortDirection;t="ASC"===t?"DESC":"ASC",this.sortBy!==e.dataIndex&&(t="ASC"),this.sortBy=e.dataIndex,this.sortDirection=t,this.getList()},onClearFilters(){this.orderIdFilter=[],this.$router.push({name:"sw.myparcel.consignments"})},onOpenCreateSingleLabelModal(e){this.createSingleLabel.item=e,this.openCreateSingleLabelModal()},onOpenCreateMultipleLabelsModal(){this.createMultipleLabels.items=this.selectedConsignments,this.openCreateMultipleLabelsModal()},onCloseCreateSingleLabelModal(){this.closeCreateSingleLabelModal()},onCreateSingleLabel(){if(this.createSingleLabel.item.consignmentReference){this.createSingleLabelLoading=!0;let e={reference_ids:[this.createSingleLabel.item.consignmentReference],label_positions:!1===this.createSingleLabel.printSmallLabel?this.createSingleLabel.printPosition:[]};this.createLabels(e)}},onCloseCreateMultipleLabelsModal(){this.closeCreateMultipleLabelsModal()},onCreateMultipleLabels(){if(this.createMultipleLabels.items){this.createMultipleLabelsLoading=!0;let e={reference_ids:[],label_positions:!1===this.createMultipleLabels.printSmallLabel?this.createMultipleLabels.printPosition:[]};for(let t in this.createMultipleLabels.items)this.createMultipleLabels.items[t].consignmentReference&&e.reference_ids.push(this.createMultipleLabels.items[t].consignmentReference);e.reference_ids.length&&this.createLabels(e)}},onPageChange({page:e=1,limit:t=25}){this.page=e,this.limit=t,this.isLoading=!0,this.getList()}}});var L=n("nao0"),S=n.n(L);const{Component:f,Mixin:v}=Shopware,{Criteria:M}=Shopware.Data;f.register("sw-myparcel-shipping-methods",{template:S.a,mixins:[v.getByName("listing")],inject:["repositoryFactory"],data:()=>({limit:10,isLoading:!1,shippingMethods:[],sortBy:"createdAt",sortDirection:"ASC"}),metaInfo(){return{title:this.$createTitle()}},mounted(){this.getList()},computed:{shippingMethodColumns(){return this.getShippingMethodColumns()},shippingMethodRepository(){return this.repositoryFactory.create("kiener_my_parcel_shipping_method")},shippingMethodCriteria(){const e=new M(this.page,this.limit);return e.setTerm(this.term),e.addSorting(M.sort(this.sortBy,this.sortDirection)),e}},methods:{getShippingMethodColumns:()=>[{property:"carrierId",label:"sw-myparcel.columns.idColumn",allowResize:!0,primary:!0},{property:"carrierName",label:"sw-myparcel.columns.carrierColumn",allowResize:!0}],getList(){return this.isLoading=!0,this.shippingMethodRepository.search(this.shippingMethodCriteria,Shopware.Context.api).then(e=>(this.total=e.total,this.shippingMethods=e,this.isLoading=!1,e)).catch(()=>{this.isLoading=!1})},onSortColumn(e){let t=this.sortDirection;t="ASC"===t?"DESC":"ASC",this.sortBy!==e.dataIndex&&(t="ASC"),this.sortBy=e.dataIndex,this.sortDirection=t,this.getList()}}});var k=n("nDUa"),T=n("OeKE"),_=n("Yfx1");const{Module:O}=Shopware;O.register("sw-myparcel",{type:"plugin",name:"MyParcel",title:"sw-myparcel.general.mainMenuItemGeneral",description:"sw-myparcel.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#0f5c47",icon:"default-action-settings",snippets:{"nl-NL":k,"de-DE":T,"en-GB":_},routes:{orders:{component:"sw-myparcel-orders",path:"orders"},consignments:{component:"sw-myparcel-consignments",path:"consignments/:orderId?",meta:{parentPath:"sw.myparcel.orders"}},shippingMethods:{component:"sw-myparcel-shipping-methods",path:"shipping/methods",meta:{parentPath:"sw.myparcel.orders"}}},navigation:[{id:"sw-myparcel",label:"sw-myparcel.general.mainMenuItemGeneral",color:"#0f5c47",path:"sw.myparcel.orders",icon:"default-shopping-paper-bag-product",position:100},{id:"sw-myparcel-orders",label:"sw-myparcel.general.ordersMenuItemGeneral",color:"#0f5c47",path:"sw.myparcel.orders",position:100,parent:"sw-myparcel"},{id:"sw-myparcel-consignments",label:"sw-myparcel.general.consignmentsMenuItemGeneral",color:"#0f5c47",path:"sw.myparcel.consignments",position:100,parent:"sw-myparcel"},{id:"sw-myparcel-shipping-methods",label:"sw-myparcel.general.shippingMethodsMenuItemGeneral",color:"#0f5c47",path:"sw.myparcel.shippingMethods",position:100,parent:"sw-myparcel"}]})},Yfx1:function(e){e.exports=JSON.parse('{"sw-myparcel":{"general":{"mainMenuItemGeneral":"MyParcel","ordersMenuItemGeneral":"Orders","consignmentsMenuItemGeneral":"Shipments","shippingMethodsMenuItemGeneral":"Shipping methods","descriptionTextModule":"Tagline for MyParcel","packageTypes":{"package":"Package","mailbox":"Mailbox","letter":"Letter","digitalStamp":"Digital stamp"},"deliveryTypes":{"morning":"Morning delivery","standard":"Standard delivery","evening":"Evening delivery","pickup":"Pickup point"},"carriers":{"postNL":"PostNL","bPost":"bpost","dpd":"DPD"}},"messages":{"error":"An error has occurred","consignmentSuccess":"The shipment is successfully created","createLabelSuccess":"The label is successfully created"},"columns":{"idColumn":"ID","orderColumn":"Order","orderDateColumn":"Ordered","consignmentDateColumn":"Created","totalAmountColumn":"Total amount","trackingCodesColumn":"Track & trace","statusColumn":"Status","actionsColumn":"Actions","packageTypeColumn":"Package type","deliveryDateColumn":"Delivery date","carrierColumn":"Carrier","deliveryTypeColumn":"Delivery type","requiresAgeCheckColumn":"Requires age check","requiresSignatureColumn":"Requires signature","onlyRecipientColumn":"Recipient only","returnIfNotHomeColumn":"Return if not home","largeFormatColumn":"Large format","numberOfConsignmentsColumn":"Shipment(s)"},"orders":{"title":"Orders","modals":{"createConsignment":{"titleSingle":"Create a shipment","titleMultiple":"Create shipments ({numberOfItems} item(s))","actionTypeDownloadLabel":"Download","actionTypeCreateLabel":"Create label","actionTypeCreateConsignment":"Create shipment","packageTypePackageLabel":"Package","packageTypeMailboxLabel":"Mailbox","packageTypeLetterLabel":"Letter","packageTypeDigitalStampLabel":"Digital stamp","optionOnlyRecipientLabel":"Only recipient","optionRequiresAgeCheckLabel":"Requires age check 18+","optionRequiresSignatureLabel":"Requires signature","optionReturnIfNotHomeLabel":"Return if not home","optionLargeFormatLabel":"Large format","positionTopLeftLabel":"Top left","positionTopRightLabel":"Top right","positionBottomLeftLabel":"Bottom left","positionBottomRightLabel":"Bottom right","printSmallLabelLabel":"A6 label","actionTypeHeading":"Action type","deliveryTypeHeading":"Delivery type","packageTypeHeading":"Package type","numberOfLabelsHeading":"Number of labels","printOptionsHeading":"Print options","printPositionHeading":"Print position","shippingOptionsHeading":"Shipping options"}},"buttons":{"viewOrderButton":"View the order","cancelButton":"Cancel","createConsignmentButton":"Create shipment","createConsignmentsButton":"Create shipments","downloadLabelButton":"Download label"}},"consignments":{"title":"Shipments","modals":{"createLabels":{"titleSingle":"Create label","titleMultiple":"Create labels ({numberOfItems} item(s))","positionTopLeftLabel":"Top left","positionTopRightLabel":"Top right","positionBottomLeftLabel":"Bottom left","positionBottomRightLabel":"Bottom right","printSmallLabelLabel":"A6 label","numberOfLabelsHeading":"Number of labels","printOptionsHeading":"Print options","printPositionHeading":"Print position"}},"buttons":{"cancelButton":"Cancel","clearFiltersButton":"Show all","createLabelButton":"Create label","createLabelsButton":"Create labels","downloadLabelButton":"Download label","downloadLabelsButton":"Download labels","downloadDefaultLabelButton":"Download label (default settings)","downloadDefaultLabelsButton":"Download labels (default settings)"}},"shippingMethods":{"title":"Shipping methods","buttons":{"viewShippingMethodButton":"View shipping method"}}}}')},daBO:function(e,t){e.exports='{% block sw_myparcel_consignments %}\n<sw-page class="sw-myparcel-consignments">\n    {% block sw_myparcel_smart_bar_header %}\n    <template #smart-bar-header>\n        {% block sw_myparcel_smart_bar_header_title %}\n        <h2>\n            {% block sw_myparcel_smart_bar_header_title_text %}\n            {{ $tc(\'sw-myparcel.general.mainMenuItemGeneral\') }}: {{ $tc(\'sw-myparcel.consignments.title\') }}\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    {% block sw_myparcel_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <sw-button v-if="orderIdFilter.length > 0" variant="secondary" :square="false" :block="false" :isLoading="false" @click="onClearFilters">\n            {{ $tc(\'sw-myparcel.consignments.buttons.clearFiltersButton\') }}\n        </sw-button>\n\n        <sw-button :disabled="!createMultipleLabelsAvailable" variant="primary" :square="false" :block="false" :isLoading="false" @click="onOpenCreateMultipleLabelsModal">\n            {{ $tc(\'sw-myparcel.consignments.buttons.createLabelsButton\') }}\n        </sw-button>\n    </template>\n    {% endblock %}\n\n    {% block sw_myparcel_content %}\n    <template #content>\n        <sw-data-grid\n                :dataSource="consignments"\n                :columns="consignmentColumns"\n                :fullPage="true"\n                :showSettings="true"\n                :showSelection="true"\n                :sortBy="sortBy"\n                :sortDirection="sortDirection"\n                :isLoading="isLoading"\n                :allowColumnEdit="false"\n                identifier="sw-myparcel-consignments-list"\n                @column-sort="onSortColumn"\n                @selection-change="onSelectionChanged">\n\n            <template #column-createdAt="{ item }">\n                {{ item.createdAt | date({hour: \'2-digit\', minute: \'2-digit\', second: \'2-digit\'}) }}\n            </template>\n\n            <template #column-order.orderNumber="{ item }">\n                <router-link :to="{ name: \'sw.order.detail\', params: { id: item.order.id } }">{{ item.order.orderNumber }}</router-link>\n            </template>\n\n            <template #column-order.orderDateTime="{ item }">\n                {{ item.order.orderDateTime | date({hour: \'2-digit\', minute: \'2-digit\', second: \'2-digit\'}) }}\n            </template>\n\n            <template #column-barCode="{ item }">\n                <a :href="item.trackAndTraceUrl" target="_blank">{{ item.barCode }}</a>\n            </template>\n\n            <template #column-shippingOption.packageType="{ item }">\n                {{ packageTypes[item.shippingOption.packageType] }}\n            </template>\n\n            <template #column-shippingOption.deliveryDate="{ item }">\n                {{ item.shippingOption.deliveryDate | date() }}\n            </template>\n\n            <template #column-shippingOption.carrierId="{ item }">\n                {{ carriers[item.shippingOption.carrierId] }}\n            </template>\n\n            <template #column-shippingOption.deliveryType="{ item }">\n                {{ deliveryTypes[item.shippingOption.deliveryType] }}\n            </template>\n\n            <template #column-shippingOption.requiresAgeCheck="{ item }">\n                <sw-icon name="default-basic-checkmark-line" v-if="item.shippingOption.requiresAgeCheck === true" small="true" />\n                <span v-else />\n            </template>\n\n            <template #column-shippingOption.requiresSignature="{ item }">\n                <sw-icon name="default-basic-checkmark-line" v-if="item.shippingOption.requiresSignature === true" small="true" />\n                <span v-else />\n            </template>\n\n            <template #column-shippingOption.onlyRecipient="{ item }">\n                <sw-icon name="default-basic-checkmark-line" v-if="item.shippingOption.onlyRecipient === true" small="true" />\n                <span v-else />\n            </template>\n\n            <template #column-shippingOption.returnIfNotHome="{ item }">\n                <sw-icon name="default-basic-checkmark-line" v-if="item.shippingOption.returnIfNotHome === true" small="true" />\n                <span v-else />\n            </template>\n\n            <template #column-shippingOption.largeFormat="{ item }">\n                <sw-icon name="default-basic-checkmark-line" v-if="item.shippingOption.largeFormat === true" small="true" />\n                <span v-else />\n            </template>\n\n            <template #actions="{ item }">\n                <sw-context-menu-item class="sw-myparcel-consignments-list__create-label-action" @click="onOpenCreateSingleLabelModal(item)">\n                    {{ $tc(\'sw-myparcel.consignments.buttons.createLabelButton\') }}\n                </sw-context-menu-item>\n            </template>\n\n            <template #pagination>\n                {% block sw_order_list_grid_pagination %}\n                    <sw-pagination :page="page"\n                                   :limit="limit"\n                                   :total="total"\n                                   :total-visible="7"\n                                   @page-change="onPageChange">\n                    </sw-pagination>\n                {% endblock %}\n            </template>\n\n        </sw-data-grid>\n\n        <sw-modal v-if="createSingleLabel.showModal === true"\n                  :title="$tc(\'sw-myparcel.consignments.modals.createLabels.titleSingle\')"\n                  @modal-close="onCloseCreateSingleLabelModal"\n                  variant="small">\n\n            <form>\n\n                <sw-base-field :label="$tc(\'sw-myparcel.consignments.modals.createLabels.printOptionsHeading\')" />\n                <sw-checkbox-field :label="$tc(\'sw-myparcel.consignments.modals.createLabels.printSmallLabelLabel\')" name="myparcel[print_small_label]" value="1" v-model="createSingleLabel.printSmallLabel" />\n\n                <sw-multi-select\n                        :disabled="createSingleLabel.printSmallLabel === true"\n                        :label="$tc(\'sw-myparcel.consignments.modals.createLabels.printPositionHeading\')"\n                        name="myparcel[print_position]"\n                        v-model="createSingleLabel.printPosition"\n                        :options="[\n                                { value: 1, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionTopLeftLabel\') },\n                                { value: 2, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionTopRightLabel\') },\n                                { value: 3, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionBottomLeftLabel\') },\n                                { value: 4, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionBottomRightLabel\') },\n                            ]">\n                </sw-multi-select>\n\n            </form>\n\n            <template slot="modal-footer">\n                <sw-button @click="onCloseCreateSingleLabelModal" size="small">\n                    {{ $tc(\'sw-myparcel.consignments.buttons.cancelButton\') }}\n                </sw-button>\n                <sw-button @click.prevent="onCreateSingleLabel" :isLoading="createSingleLabelLoading" variant="primary" size="small">\n                    {{ $tc(\'sw-myparcel.consignments.buttons.downloadLabelButton\') }}\n                </sw-button>\n            </template>\n        </sw-modal>\n\n        <sw-modal v-if="createMultipleLabels.showModal === true"\n                  :title="$tc(\'sw-myparcel.consignments.modals.createLabels.titleMultiple\', 0, { numberOfItems: selectionCount })"\n                  @modal-close="onCloseCreateMultipleLabelsModal"\n                  variant="small">\n\n            <form>\n\n                <sw-base-field :label="$tc(\'sw-myparcel.consignments.modals.createLabels.printOptionsHeading\')" />\n                <sw-checkbox-field :label="$tc(\'sw-myparcel.consignments.modals.createLabels.printSmallLabelLabel\')" name="myparcel[print_small_label]" value="1" v-model="createMultipleLabels.printSmallLabel" />\n\n                <sw-multi-select\n                        :disabled="createMultipleLabels.printSmallLabel === true"\n                        :label="$tc(\'sw-myparcel.consignments.modals.createLabels.printPositionHeading\')"\n                        name="myparcel[print_position]"\n                        v-model="createMultipleLabels.printPosition"\n                        :options="[\n                                { value: 1, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionTopLeftLabel\') },\n                                { value: 2, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionTopRightLabel\') },\n                                { value: 3, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionBottomLeftLabel\') },\n                                { value: 4, label: $tc(\'sw-myparcel.consignments.modals.createLabels.positionBottomRightLabel\') },\n                            ]">\n                </sw-multi-select>\n\n            </form>\n\n            <template slot="modal-footer">\n                <sw-button @click="onCloseCreateMultipleLabelsModal" size="small">\n                    {{ $tc(\'sw-myparcel.consignments.buttons.cancelButton\') }}\n                </sw-button>\n                <sw-button @click.prevent="onCreateMultipleLabels" :isLoading="createMultipleLabelsLoading" variant="primary" size="small">\n                    {{ $tc(\'sw-myparcel.consignments.buttons.downloadLabelsButton\') }}\n                </sw-button>\n            </template>\n        </sw-modal>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n'},nDUa:function(e){e.exports=JSON.parse('{"sw-myparcel":{"general":{"mainMenuItemGeneral":"MyParcel","ordersMenuItemGeneral":"Orders","consignmentsMenuItemGeneral":"Consignments","shippingMethodsMenuItemGeneral":"Shipping methods","descriptionTextModule":"Tagline for MyParcel","packageTypes":{"package":"Pakket","mailbox":"Brievenbuspakket","letter":"Briefpost","digitalStamp":"Digitale postzegel"},"deliveryTypes":{"morning":"Ochtendlevering","standard":"Standaardlevering","evening":"Avondlevering","pickup":"Afhaalpunt"},"carriers":{"postNL":"PostNL","bPost":"bpost","dpd":"DPD"}},"messages":{"error":"Er heeft een fout plaatsgevonden","consignmentSuccess":"De verzending is succesvol aangemaakt","createLabelSuccess":"Het label is succesvol aangemaakt"},"columns":{"idColumn":"ID","orderColumn":"Bestelling","orderDateColumn":"Besteld","consignmentDateColumn":"Aangemaakt","totalAmountColumn":"Totaal","trackingCodesColumn":"Track & trace","statusColumn":"Status","actionsColumn":"Acties","packageTypeColumn":"Type pakket","deliveryDateColumn":"Bezorgdatum","carrierColumn":"Carrier","deliveryTypeColumn":"Verzendtype","requiresAgeCheckColumn":"Controle leeftijd 18+","requiresSignatureColumn":"Handtekening nodig","onlyRecipientColumn":"Alleen thuisadres","returnIfNotHomeColumn":"Retour bij niet aanwezig","largeFormatColumn":"Groot pakket","numberOfConsignmentsColumn":"Zending(en)"},"orders":{"title":"Bestellingen","modals":{"createConsignment":{"titleSingle":"Maak verzending aan","titleMultiple":"Maak verzendingen aan ({numberOfItems} item(s))","actionTypeDownloadLabel":"Download","actionTypeCreateLabel":"Maak label","actionTypeCreateConsignment":"Maak zending","packageTypePackageLabel":"Pakket","packageTypeMailboxLabel":"Brievenbuspakket","packageTypeLetterLabel":"Briefpost","packageTypeDigitalStampLabel":"Digitale postzegel","optionOnlyRecipientLabel":"Alleen thuisadres","optionRequiresAgeCheckLabel":"Controle leeftijd 18+","optionRequiresSignatureLabel":"Handtekening nodig","optionReturnIfNotHomeLabel":"Retour bij niet aanwezig","optionLargeFormatLabel":"Groot formaat","positionTopLeftLabel":"Linksboven","positionTopRightLabel":"Rechtsboven","positionBottomLeftLabel":"Linksonder","positionBottomRightLabel":"Rechtsonder","printSmallLabelLabel":"A6 label","actionTypeHeading":"Type actie","deliveryTypeHeading":"Type levering","packageTypeHeading":"Type pakket","numberOfLabelsHeading":"Aantal labels","printOptionsHeading":"Printopties","printPositionHeading":"Printpositie","shippingOptionsHeading":"Verzendopties"}},"buttons":{"viewOrderButton":"Order bekijken","cancelButton":"Annuleren","createConsignmentButton":"Verzending aanmaken","createConsignmentsButton":"Verzendingen aanmaken","createLabelButton":"Label aanmaken","downloadLabelButton":"Label downloaden"}},"consignments":{"title":"Verzendingen","modals":{"createLabels":{"titleSingle":"Label aanmaken","titleMultiple":"Labels aanmaken ({numberOfItems} item(s))","positionTopLeftLabel":"Linksboven","positionTopRightLabel":"Rechtsboven","positionBottomLeftLabel":"Linksonder","positionBottomRightLabel":"Rechtsonder","printSmallLabelLabel":"A6 label","numberOfLabelsHeading":"Aantal labels","printOptionsHeading":"Printopties","printPositionHeading":"Printpositie"}},"buttons":{"cancelButton":"Annuleren","clearFiltersButton":"Toon alles","createLabelButton":"Label aanmaken","createLabelsButton":"Labels aanmaken","downloadLabelButton":"Label downloaden","downloadLabelsButton":"Labels downloaden","downloadDefaultLabelButton":"Label downloaden (standaard instellingen)","downloadDefaultLabelsButton":"Labels downloaden (standaard instellingen)"}},"shippingMethods":{"title":"Verzendmethoden","buttons":{"viewShippingMethodButton":"Bekijk verzendmethode"}}}}')},nao0:function(e,t){e.exports='{% block sw_myparcel_shipments %}\n<sw-page class="sw-myparcel-shipments">\n    {% block sw_myparcel_smart_bar_header %}\n    <template #smart-bar-header>\n        {% block sw_myparcel_smart_bar_header_title %}\n        <h2>\n            {% block sw_myparcel_smart_bar_header_title_text %}\n            {{ $tc(\'sw-myparcel.general.mainMenuItemGeneral\') }}: {{ $tc(\'sw-myparcel.shippingMethods.title\') }}\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    {% block sw_myparcel_smart_bar_actions %}\n<template #smart-bar-actions>\n\n</template>\n    {% endblock %}\n\n    {% block sw_myparcel_content %}\n    <template #content>\n        <sw-data-grid\n                :dataSource="shippingMethods"\n                :columns="shippingMethodColumns"\n                :fullPage="true"\n                :showSettings="true"\n                :showSelection="false"\n                :sortBy="sortBy"\n                :sortDirection="sortDirection"\n                :isLoading="isLoading"\n                :allowColumnEdit="false"\n                identifier="sw-myparcel-shipping-methods-list"\n                @column-sort="onSortColumn">\n\n            <template slot="pagination">#}\n                <sw-pagination\n                        :page="page"\n                        :limit="limit"\n                        :total="total"\n                        :total-visible="25"\n                        @page-change="onPageChange"\n                        :steps="[25]">\n                </sw-pagination>\n            </template>\n\n            <template #actions="{ item }">\n                <sw-context-menu-item class="sw-myparcel-shipping-methods-list__shipping-method-view-action" :routerLink="{ name: \'sw.settings.shipping.detail\', params: { id: item.shippingMethodId } }">\n                    {{ $tc(\'sw-myparcel.shippingMethods.buttons.viewShippingMethodButton\') }}\n                </sw-context-menu-item>\n            </template>\n        </sw-data-grid>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}'},oPqW:function(e,t){e.exports='{% block sw_myparcel_orders %}\n    <sw-page class="sw-myparcel">\n        {% block sw_myparcel_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block sw_myparcel_smart_bar_header_title %}\n                <h2>\n                    {% block sw_myparcel_smart_bar_header_title_text %}\n                        {{ $tc(\'sw-myparcel.general.mainMenuItemGeneral\') }}: {{ $tc(\'sw-myparcel.orders.title\') }}\n                    {% endblock %}\n                </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sw_myparcel_smart_bar_actions %}\n            <template #smart-bar-actions>\n                <sw-button :disabled="!createMultipleConsignmentsAvailable" variant="primary" :square="false" :block="false" :isLoading="false" @click="onOpenCreateMultipleConsignmentsModal">\n                    {{ $tc(\'sw-myparcel.orders.buttons.createConsignmentsButton\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        {% block sw_myparcel_content %}\n            <template #content>\n                <sw-data-grid\n                        :dataSource="shippingOptions"\n                        :columns="orderColumns"\n                        :fullPage="true"\n                        :showSettings="true"\n                        :showSelection="true"\n                        :sortBy="sortBy"\n                        :sortDirection="sortDirection"\n                        :isLoading="isLoading"\n                        :allowColumnEdit="false"\n                        identifier="sw-myparcel-orders-list">\n\n                    <template #column-order.orderNumber="{ item }">\n                        <router-link :to="{ name: \'sw.order.detail\', params: { id: item.order.id } }">{{ item.order.orderNumber }}</router-link>\n                    </template>\n\n                    <template #column-order.orderCustomer.firstName="{ item }">\n                        {{ item.order.orderCustomer.firstName }} {{ item.order.orderCustomer.lastName }}\n                    </template>\n\n                    <template #column-order.billingAddressId="{ item }">\n                        {{ getBillingAddress(item.order).street }},\n                        {{ getBillingAddress(item.order).zipcode }}\n                        {{ getBillingAddress(item.order).city }}\n                    </template>\n\n                    <template #column-order.amountTotal="{ item }">\n                        {{ item.order.amountTotal | currency(item.order.currency.translated.shortName) }}\n                    </template>\n\n                    <template #column-order.stateMachineState.name="{ item }">\n                        <sw-label :variant="getVariantFromOrderState(item.order)" appearance="pill">\n                            {{ item.order.stateMachineState.translated.name }}\n                        </sw-label>\n                    </template>\n\n                    <template #column-order.transactions[0].stateMachineState.name="{ item }">\n                        <sw-label v-if="item.order.transactions && item.order.transactions[0]"\n                                  :variant="getVariantFromPaymentState(item.order)"\n                                  appearance="pill">\n                            {{ item.order.transactions[0].stateMachineState.translated.name }}\n                        </sw-label>\n                    </template>\n\n                    <template #column-order.deliveries[0].stateMachineState.name="{ item }">\n                        <sw-label v-if="item.order.deliveries && item.order.deliveries[0]"\n                                  :variant="getVariantFromDeliveryState(item.order)"\n                                  appearance="pill">\n                            {{ item.order.deliveries[0].stateMachineState.translated.name }}\n                        </sw-label>\n                    </template>\n\n                    <template #column-deliveryDate="{ item }">\n                        {{ item.deliveryDate | date() }}\n                    </template>\n\n                    <template #column-carrierId="{ item }">\n                        {{ carriers[item.carrierId] }}\n                    </template>\n\n                    <template #column-deliveryType="{ item }">\n                        {{ deliveryTypes[item.deliveryType] }}\n                    </template>\n\n                    <template #column-numberOfConsignments="{ item }">\n                        {{ getNumberOfConsignments(item.id) }}\n                        <router-link :to="{ name: \'sw.myparcel.consignments\', params: { orderId: item.orderId }}"><span :ref="item.id" /></router-link>\n                    </template>\n\n                    <template #column-order.orderDateTime="{ item }">\n                        {{ item.order.orderDateTime | date({hour: \'2-digit\', minute: \'2-digit\', second: \'2-digit\'}) }}\n                    </template>\n\n                    <template #actions="{ item }">\n                        <sw-context-menu-item class="sw-myparcel-orders-list__order-view-action" :routerLink="{ name: \'sw.order.detail\', params: { id: item.orderId } }">\n                            {{ $tc(\'sw-myparcel.orders.buttons.viewOrderButton\') }}\n                        </sw-context-menu-item>\n                        <sw-context-menu-item class="sw-myparcel-orders-list__create-consignment-action" @click="onOpenCreateSingleConsignmentModal(item)">\n                            {{ $tc(\'sw-myparcel.orders.buttons.createConsignmentButton\') }}\n                        </sw-context-menu-item>\n                    </template>\n\n                    <template #pagination>\n                        {% block sw_order_list_grid_pagination %}\n                            <sw-pagination :page="page"\n                                           :limit="limit"\n                                           :total="total"\n                                           :total-visible="7"\n                                           @page-change="onPageChange">\n                            </sw-pagination>\n                        {% endblock %}\n                    </template>\n\n                </sw-data-grid>\n\n                <sw-modal v-if="createSingleConsignment.showModal === true"\n                          :title="$tc(\'sw-myparcel.orders.modals.createConsignment.titleSingle\')"\n                          @modal-close="onCloseCreateSingleConsignmentModal"\n                          variant="small">\n\n                    <form>\n\n                        <sw-select-field\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.actionTypeHeading\')"\n                                name="myparcel[action_type]"\n                                v-model="createSingleConsignment.actionType">\n\n                            <option value="download">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.actionTypeDownloadLabel\') }}</option>\n                            <option value="create">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.actionTypeCreateLabel\') }}</option>\n                        </sw-select-field>\n\n                        <sw-select-number-field\n                                :disabled="true"\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.deliveryTypeHeading\')"\n                                name="myparcel[delivery_type]"\n                                v-model="createSingleConsignment.item.deliveryType">\n\n                            <option value="1">{{ $tc(\'sw-myparcel.general.deliveryTypes.morning\') }}</option>\n                            <option value="2">{{ $tc(\'sw-myparcel.general.deliveryTypes.standard\') }}</option>\n                            <option value="3">{{ $tc(\'sw-myparcel.general.deliveryTypes.evening\') }}</option>\n                            <option value="4">{{ $tc(\'sw-myparcel.general.deliveryTypes.pickup\') }}</option>\n                        </sw-select-number-field>\n\n                        <sw-select-number-field\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeHeading\')"\n                                name="myparcel[package_type]"\n                                v-model="createSingleConsignment.item.packageType">\n\n                            <option value="1">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypePackageLabel\') }}</option>\n                            <option value="2">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeMailboxLabel\') }}</option>\n                            <option value="3">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeLetterLabel\') }}</option>\n                            <option value="4">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeDigitalStampLabel\') }}</option>\n                        </sw-select-number-field>\n\n                        <sw-base-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.printOptionsHeading\')" />\n                        <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.printSmallLabelLabel\')" name="myparcel[print_small_label]" value="1" v-model="createSingleConsignment.printSmallLabel" />\n\n                        <sw-multi-select\n                                :disabled="createSingleConsignment.printSmallLabel === true"\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.printPositionHeading\')"\n                                name="myparcel[print_position]"\n                                v-model="createSingleConsignment.printPosition"\n                                :options="[\n                                { value: 1, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionTopLeftLabel\') },\n                                { value: 2, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionTopRightLabel\') },\n                                { value: 3, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionBottomLeftLabel\') },\n                                { value: 4, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionBottomRightLabel\') },\n                            ]">\n                        </sw-multi-select>\n\n                        <sw-number-field\n                            :label="$tc(\'sw-myparcel.orders.modals.createConsignment.numberOfLabelsHeading\')"\n                            name="myparcel[number_of_labels]"\n                            numberType="int"\n                            :min="1"\n                            :step="1"\n                            v-model="createSingleConsignment.numberOfLabels" />\n\n                        <template v-if="createSingleConsignment.item.packageType === 1">\n                            <sw-base-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.shippingOptionsHeading\')" />\n                            <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.optionOnlyRecipientLabel\')" name="myparcel[only_recipient]" value="1" v-model="createSingleConsignment.item.onlyRecipient" :checked="onlyRecipientChecked(createSingleConsignment.item)" :disabled="onlyRecipientDisabled(createSingleConsignment.item)" />\n                            <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.optionRequiresAgeCheckLabel\')" name="myparcel[requires_age_check]" value="1" v-model="createSingleConsignment.item.requiresAgeCheck" />\n                            <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.optionRequiresSignatureLabel\')" name="myparcel[requires_signature]" value="1" v-model="createSingleConsignment.item.requiresSignature" />\n                            <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.optionReturnIfNotHomeLabel\')" name="myparcel[return_if_not_home]" value="1" v-model="createSingleConsignment.item.returnIfNotHome" />\n                            <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.optionLargeFormatLabel\')" name="myparcel[large_format]" value="1" v-model="createSingleConsignment.item.largeFormat" /><br />\n                        </template>\n\n                        <template v-else>\n                            <input type="hidden" name="myparcel[requires_age_check]" value="0" />\n                            <input type="hidden" name="myparcel[requires_signature]" value="0" />\n                            <input type="hidden" name="myparcel[return_if_not_home]" value="0" />\n                            <input type="hidden" name="myparcel[large_format]" value="0" />\n                        </template>\n\n                    </form>\n\n                    <template slot="modal-footer">\n                        <sw-button @click="onCloseCreateSingleConsignmentModal" size="small">\n                            {{ $tc(\'sw-myparcel.orders.buttons.cancelButton\') }}\n                        </sw-button>\n                        <sw-button @click.prevent="onCreateSingleConsignment" :isLoading="createSingleConsignmentLoading" variant="primary" size="small">\n                            {{ $tc(\'sw-myparcel.orders.buttons.createConsignmentButton\') }}\n                        </sw-button>\n                    </template>\n                </sw-modal>\n\n                <sw-modal v-if="createMultipleConsignments.showModal === true"\n                          :title="$tc(\'sw-myparcel.orders.modals.createConsignment.titleMultiple\', 0, { numberOfItems: selectedShippingOptionIds.length })"\n                          @modal-close="onCloseCreateMultipleConsignmentsModal"\n                          variant="small">\n\n                    <form>\n\n                        <sw-select-field\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.actionTypeHeading\')"\n                                name="myparcel[action_type]"\n                                v-model="createMultipleConsignments.actionType">\n\n                            <option value="download">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.actionTypeDownloadLabel\') }}</option>\n                            <option value="create">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.actionTypeCreateLabel\') }}</option>\n                        </sw-select-field>\n\n                        <sw-select-number-field\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeHeading\')"\n                                name="myparcel[package_type]"\n                                v-model="createMultipleConsignments.packageType">\n\n                            <option value="1">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypePackageLabel\') }}</option>\n                            <option value="2">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeMailboxLabel\') }}</option>\n                            <option value="3">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeLetterLabel\') }}</option>\n                            <option value="4">{{ $tc(\'sw-myparcel.orders.modals.createConsignment.packageTypeDigitalStampLabel\') }}</option>\n                        </sw-select-number-field>\n\n                        <sw-base-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.printOptionsHeading\')" />\n                        <sw-checkbox-field :label="$tc(\'sw-myparcel.orders.modals.createConsignment.printSmallLabelLabel\')" name="myparcel[print_small_label]" value="1" v-model="createMultipleConsignments.printSmallLabel" />\n\n                        <sw-multi-select\n                                :disabled="createMultipleConsignments.printSmallLabel === true"\n                                :label="$tc(\'sw-myparcel.orders.modals.createConsignment.printPositionHeading\')"\n                                name="myparcel[print_position]"\n                                v-model="createMultipleConsignments.printPosition"\n                                :options="[\n                                { value: 1, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionTopLeftLabel\') },\n                                { value: 2, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionTopRightLabel\') },\n                                { value: 3, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionBottomLeftLabel\') },\n                                { value: 4, label: $tc(\'sw-myparcel.orders.modals.createConsignment.positionBottomRightLabel\') },\n                            ]">\n                        </sw-multi-select>\n\n                    </form>\n\n                    <template slot="modal-footer">\n                        <sw-button @click="onCloseCreateMultipleConsignmentsModal" size="small">\n                            {{ $tc(\'sw-myparcel.orders.buttons.cancelButton\') }}\n                        </sw-button>\n                        <sw-button @click.prevent="onCreateMultipleConsignments" :isLoading="createMultipleConsignmentsLoading" variant="primary" size="small">\n                            {{ $tc(\'sw-myparcel.orders.buttons.createConsignmentsButton\') }}\n                        </sw-button>\n                    </template>\n                </sw-modal>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'}},[["YY62","runtime"]]]);